# {{ ansible_managed }}
# Global Settings for notifications
global_defs {
{% if keepalived_smtp_alert %}
    notification_email {
        {{ keepalived_notification_email_to }}
    }
    notification_email_from {{ keepalived_notification_email_from }}
    smtp_server {{ keepalived_smtp_server }}
    smtp_connect_timeout 15
{% endif %}
    enable_script_security
    script_user nobody
}

# Define the script used to check if haproxy is still working
vrrp_track_process track_haproxy {
    process "haproxy"
    quorum 1
    weight 100
    delay 1
}

{% for instance in haproxy_service_config %}
{# test if instance fqdn is valid #}
{% if lookup('community.general.dig', instance ) != "NXDOMAIN" %}
{% set keepalived = haproxy_service_config[instance].keepalived | default ('{}') %}
{# test if keepalived is configured #}
{% if keepalived | length > 0 %}
vrrp_instance {{ instance }} {
    interface {{ current_proxyhost.interface }}
    state {{ current_proxyhost.state | upper }}

    priority {{ current_proxyhost.priority | default ( 100 )}}
    virtual_router_id {{ keepalived.id | default ( 1 ) }}

    advert_int {{ keepalived.advertisements_interval | default ( 1 ) }}

{% if keepalived_smtp_alert %}
    smtp_alert

{% endif %}
    authentication {
        auth_type {{ keepalived.authentication.auth_type | default ('AH') }}
        auth_pass {{ keepalived.authentication.auth_pass | default ( keepalived_auth_pass )}}
    }

    # The virtual ip address shared between the two loadbalancers
    virtual_ipaddress {
        {{ lookup('community.general.dig', instance ) }}
    }

{% if keepalived_vrrp_unicast %}
    unicast_src_ip {{ lookup('community.general.dig', ansible_fqdn ) }}
    # Define unicast peer to advertise
    unicast_peer {
{% for peer in haproxy_cluster %}
{% if peer.fqdn != ansible_fqdn %}
        {{ lookup('community.general.dig', peer.fqdn ) }}
{% endif %}
{% endfor %}
    }
{% endif %}

    # Use the defined process to Check whether to initiate a fail over
    track_process {
        track_haproxy
    }

    # LOG : Notify state transition
    notify "/usr/local/bin/keepalived-notify.sh"
}
{% endif %}
{% endif %}
{% endfor %}